<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lab.dao.RoomMsgMapper">
  <resultMap id="BaseResultMap" type="com.lab.model.RoomMsg">
    <id column="id" jdbcType="INTEGER" property="id" />
        <result column="room_name" property="roomName" jdbcType="VARCHAR" />
  <result column="address" property="address" jdbcType="VARCHAR" />
  <result column="manage_id" property="manageId" jdbcType="INTEGER" />
  <result column="max_num" property="maxNum" jdbcType="INTEGER" />
  <result column="remark" property="remark" jdbcType="VARCHAR" />
  <result column="room_type" property="roomType" jdbcType="INTEGER" />

  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
     id,room_name,address,manage_id,max_num,remark,room_type
  </sql>
  <select id="selectByExample" parameterType="com.lab.model.RoomMsgExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from room_msg
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
     <if test="startRow >= 0 and pageRows > 0">
  limit ${startRow},${pageRows}
  </if>

  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
     from room_msg
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
   delete from room_msg
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lab.model.RoomMsgExample">
    delete from room_msg
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lab.model.RoomMsg">
      <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
  SELECT LAST_INSERT_ID()
</selectKey>

      insert into room_msg (room_name,address,manage_id,max_num,remark,room_type)
      values (	#{id,jdbcType=INTEGER},	#{roomName,jdbcType=VARCHAR},	#{address,jdbcType=VARCHAR},	#{manageId,jdbcType=INTEGER},	#{maxNum,jdbcType=INTEGER},	#{remark,jdbcType=VARCHAR},	#{roomType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lab.model.RoomMsg">
   <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
  SELECT LAST_INSERT_ID()
</selectKey>

    insert into room_msg
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null" >
	  id,
 </if>
<if test="roomName != null" >
	  room_name,
 </if>
<if test="address != null" >
	  address,
 </if>
<if test="manageId != null" >
	  manage_id,
 </if>
<if test="maxNum != null" >
	  max_num,
 </if>
<if test="remark != null" >
	  remark,
 </if>
<if test="roomType != null" >
	  room_type
 </if>

    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
         <if test="id != null" >
	 #{id,jdbcType=INTEGER},
	 </if>
  <if test="roomName != null" >
	 #{roomName,jdbcType=VARCHAR},
	 </if>
  <if test="address != null" >
	 #{address,jdbcType=VARCHAR},
	 </if>
  <if test="manageId != null" >
	 #{manageId,jdbcType=INTEGER},
	 </if>
  <if test="maxNum != null" >
	 #{maxNum,jdbcType=INTEGER},
	 </if>
  <if test="remark != null" >
	 #{remark,jdbcType=VARCHAR},
	 </if>
  <if test="roomType != null" >
	 #{roomType,jdbcType=INTEGER},
	 </if>

    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lab.model.RoomMsgExample" resultType="java.lang.Long">
    select count(*) from room_msg
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update room_msg
    <set>
       <if test="record.roomName != null" >
	 room_name = #{record.roomName,jdbcType=VARCHAR},
</if>
 <if test="record.address != null" >
	 address = #{record.address,jdbcType=VARCHAR},
</if>
 <if test="record.manageId != null" >
	 manage_id = #{record.manageId,jdbcType=INTEGER},
</if>
 <if test="record.maxNum != null" >
	 max_num = #{record.maxNum,jdbcType=INTEGER},
</if>
 <if test="record.remark != null" >
	 remark = #{record.remark,jdbcType=VARCHAR},
</if>
 <if test="record.roomType != null" >
	 room_type = #{record.roomType,jdbcType=INTEGER}
</if>

    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update room_msg
    set 
    				room_name = #{record.roomName,jdbcType=VARCHAR},	address = #{record.address,jdbcType=VARCHAR},	manage_id = #{record.manageId,jdbcType=INTEGER},	max_num = #{record.maxNum,jdbcType=INTEGER},	remark = #{record.remark,jdbcType=VARCHAR},	room_type = #{record.roomType,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lab.model.RoomMsg">
    update room_msg
    <set>
       <if test="roomName != null" >
	 room_name = #{roomName,jdbcType=VARCHAR},
</if>
 <if test="address != null" >
	 address = #{address,jdbcType=VARCHAR},
</if>
 <if test="manageId != null" >
	 manage_id = #{manageId,jdbcType=INTEGER},
</if>
 <if test="maxNum != null" >
	 max_num = #{maxNum,jdbcType=INTEGER},
</if>
 <if test="remark != null" >
	 remark = #{remark,jdbcType=VARCHAR},
</if>
 <if test="roomType != null" >
	 room_type = #{roomType,jdbcType=INTEGER}
</if>

    </set>
     where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lab.model.RoomMsg">
    update room_msg
    set 
     			room_name = #{roomName,jdbcType=VARCHAR},	address = #{address,jdbcType=VARCHAR},	manage_id = #{manageId,jdbcType=INTEGER},	max_num = #{maxNum,jdbcType=INTEGER},	remark = #{remark,jdbcType=VARCHAR},	room_type = #{roomType,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
</mapper>
