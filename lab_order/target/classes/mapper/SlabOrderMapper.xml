<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lab.dao.SlabOrderMapper">
  <resultMap id="BaseResultMap" type="com.lab.model.SlabOrder">
    <id column="id" jdbcType="INTEGER" property="id" />
        <result column="stu_id" property="stuId" jdbcType="INTEGER" />
  <result column="stu_no" property="stuNo" jdbcType="VARCHAR" />
  <result column="stu_name" property="stuName" jdbcType="VARCHAR" />
  <result column="room_id" property="roomId" jdbcType="INTEGER" />
  <result column="app_reason" property="appReason" jdbcType="VARCHAR" />
  <result column="college_id" property="collegeId" jdbcType="INTEGER" />
  <result column="order_date" property="orderDate" jdbcType="VARCHAR" />
  <result column="order_time" property="orderTime" jdbcType="INTEGER" />
  <result column="order_status" property="orderStatus" jdbcType="INTEGER" />
  <result column="create_date" property="createDate" jdbcType="VARCHAR" />

  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
     id,stu_id,stu_no,stu_name,room_id,app_reason,college_id,order_date,order_time,order_status,create_date
  </sql>
  <select id="selectByExample" parameterType="com.lab.model.SlabOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from slab_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
     <if test="startRow >= 0 and pageRows > 0">
  limit ${startRow},${pageRows}
  </if>

  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
     from slab_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
   delete from slab_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lab.model.SlabOrderExample">
    delete from slab_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lab.model.SlabOrder">
      <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
  SELECT LAST_INSERT_ID()
</selectKey>

      insert into slab_order (stu_id,stu_no,stu_name,room_id,app_reason,college_id,order_date,order_time,order_status,create_date)
      values (	#{id,jdbcType=INTEGER},	#{stuId,jdbcType=INTEGER},	#{stuNo,jdbcType=VARCHAR},	#{stuName,jdbcType=VARCHAR},	#{roomId,jdbcType=INTEGER},	#{appReason,jdbcType=VARCHAR},	#{collegeId,jdbcType=INTEGER},	#{orderDate,jdbcType=VARCHAR},	#{orderTime,jdbcType=INTEGER},	#{orderStatus,jdbcType=INTEGER},	#{createDate,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lab.model.SlabOrder">
   <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
  SELECT LAST_INSERT_ID()
</selectKey>

    insert into slab_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null" >
	  id,
 </if>
<if test="stuId != null" >
	  stu_id,
 </if>
<if test="stuNo != null" >
	  stu_no,
 </if>
<if test="stuName != null" >
	  stu_name,
 </if>
<if test="roomId != null" >
	  room_id,
 </if>
<if test="appReason != null" >
	  app_reason,
 </if>
<if test="collegeId != null" >
	  college_id,
 </if>
<if test="orderDate != null" >
	  order_date,
 </if>
<if test="orderTime != null" >
	  order_time,
 </if>
<if test="orderStatus != null" >
	  order_status,
 </if>
<if test="createDate != null" >
	  create_date
 </if>

    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
         <if test="id != null" >
	 #{id,jdbcType=INTEGER},
	 </if>
  <if test="stuId != null" >
	 #{stuId,jdbcType=INTEGER},
	 </if>
  <if test="stuNo != null" >
	 #{stuNo,jdbcType=VARCHAR},
	 </if>
  <if test="stuName != null" >
	 #{stuName,jdbcType=VARCHAR},
	 </if>
  <if test="roomId != null" >
	 #{roomId,jdbcType=INTEGER},
	 </if>
  <if test="appReason != null" >
	 #{appReason,jdbcType=VARCHAR},
	 </if>
  <if test="collegeId != null" >
	 #{collegeId,jdbcType=INTEGER},
	 </if>
  <if test="orderDate != null" >
	 #{orderDate,jdbcType=VARCHAR},
	 </if>
  <if test="orderTime != null" >
	 #{orderTime,jdbcType=INTEGER},
	 </if>
  <if test="orderStatus != null" >
	 #{orderStatus,jdbcType=INTEGER},
	 </if>
  <if test="createDate != null" >
	 #{createDate,jdbcType=VARCHAR},
	 </if>

    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lab.model.SlabOrderExample" resultType="java.lang.Long">
    select count(*) from slab_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update slab_order
    <set>
       <if test="record.stuId != null" >
	 stu_id = #{record.stuId,jdbcType=INTEGER},
</if>
 <if test="record.stuNo != null" >
	 stu_no = #{record.stuNo,jdbcType=VARCHAR},
</if>
 <if test="record.stuName != null" >
	 stu_name = #{record.stuName,jdbcType=VARCHAR},
</if>
 <if test="record.roomId != null" >
	 room_id = #{record.roomId,jdbcType=INTEGER},
</if>
 <if test="record.appReason != null" >
	 app_reason = #{record.appReason,jdbcType=VARCHAR},
</if>
 <if test="record.collegeId != null" >
	 college_id = #{record.collegeId,jdbcType=INTEGER},
</if>
 <if test="record.orderDate != null" >
	 order_date = #{record.orderDate,jdbcType=VARCHAR},
</if>
 <if test="record.orderTime != null" >
	 order_time = #{record.orderTime,jdbcType=INTEGER},
</if>
 <if test="record.orderStatus != null" >
	 order_status = #{record.orderStatus,jdbcType=INTEGER},
</if>
 <if test="record.createDate != null" >
	 create_date = #{record.createDate,jdbcType=VARCHAR}
</if>

    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update slab_order
    set 
    				stu_id = #{record.stuId,jdbcType=INTEGER},	stu_no = #{record.stuNo,jdbcType=VARCHAR},	stu_name = #{record.stuName,jdbcType=VARCHAR},	room_id = #{record.roomId,jdbcType=INTEGER},	app_reason = #{record.appReason,jdbcType=VARCHAR},	college_id = #{record.collegeId,jdbcType=INTEGER},	order_date = #{record.orderDate,jdbcType=VARCHAR},	order_time = #{record.orderTime,jdbcType=INTEGER},	order_status = #{record.orderStatus,jdbcType=INTEGER},	create_date = #{record.createDate,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lab.model.SlabOrder">
    update slab_order
    <set>
       <if test="stuId != null" >
	 stu_id = #{stuId,jdbcType=INTEGER},
</if>
 <if test="stuNo != null" >
	 stu_no = #{stuNo,jdbcType=VARCHAR},
</if>
 <if test="stuName != null" >
	 stu_name = #{stuName,jdbcType=VARCHAR},
</if>
 <if test="roomId != null" >
	 room_id = #{roomId,jdbcType=INTEGER},
</if>
 <if test="appReason != null" >
	 app_reason = #{appReason,jdbcType=VARCHAR},
</if>
 <if test="collegeId != null" >
	 college_id = #{collegeId,jdbcType=INTEGER},
</if>
 <if test="orderDate != null" >
	 order_date = #{orderDate,jdbcType=VARCHAR},
</if>
 <if test="orderTime != null" >
	 order_time = #{orderTime,jdbcType=INTEGER},
</if>
 <if test="orderStatus != null" >
	 order_status = #{orderStatus,jdbcType=INTEGER},
</if>
 <if test="createDate != null" >
	 create_date = #{createDate,jdbcType=VARCHAR}
</if>

    </set>
     where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lab.model.SlabOrder">
    update slab_order
    set 
     			stu_id = #{stuId,jdbcType=INTEGER},	stu_no = #{stuNo,jdbcType=VARCHAR},	stu_name = #{stuName,jdbcType=VARCHAR},	room_id = #{roomId,jdbcType=INTEGER},	app_reason = #{appReason,jdbcType=VARCHAR},	college_id = #{collegeId,jdbcType=INTEGER},	order_date = #{orderDate,jdbcType=VARCHAR},	order_time = #{orderTime,jdbcType=INTEGER},	order_status = #{orderStatus,jdbcType=INTEGER},	create_date = #{createDate,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
</mapper>
